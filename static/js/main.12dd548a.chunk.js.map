{"version":3,"sources":["Components/NavigationItem.js","Containers/NavigationBar.js","Components/Header.js","Components/HomeContent.js","Components/Home.js","Items/ExperienceCard.js","Components/Experience.js","Containers/App.js","serviceWorker.js","index.js"],"names":["NavigationItem","className","activeClassName","exact","to","this","props","toLink","item","Component","NavigationBar","state","Header","size","href","style","textDecoration","color","download","HomeContent","Home","ExperienceCard","Experience","App","basename","process","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.12dd548a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport './NavigationItem.css';\r\n\r\nclass NavigationItem extends Component {\r\n  render() {\r\n    return (\r\n      <NavLink className=\"NavigationItem\" activeClassName='NavigationActive' exact to={this.props.toLink}>\r\n        {this.props.item === 'Home' ? 'Allen Bautista' : this.props.item}\r\n      </NavLink>\r\n    );\r\n  };\r\n}\r\n\r\nexport default NavigationItem","import React, { Component } from 'react';\r\n\r\nimport './NavigationBar.css';\r\nimport NavigationItem from '../Components/NavigationItem.js';\r\n\r\nclass NavigationBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      'NavItemActive':''\r\n    }\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"NavigationBar\">\r\n        <div className=\"navigationItems\">\r\n          <NavigationItem item=\"Home\" toLink=\"/\" />\r\n          <NavigationItem item=\"Experience\" toLink=\"/experience\" />\r\n          <NavigationItem item=\"Portfolio\" toLink=\"/portfolio\" />\r\n          <NavigationItem item=\"Contacts\" toLink=\"/contacts\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default NavigationBar;","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\">\r\n      <div className=\"HeaderName\">Allen Bautista</div>\r\n      <div className=\"HeaderRole\">Software Developer</div>\r\n      <button className=\"HeaderButton\" size=\"lg\">\r\n        <a href=\"./resume_bautistaa_website.pdf\" style={{textDecoration: 'none', color: 'white'}} download>\r\n          Download CV\r\n        </a>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './HomeContent.css';\r\n\r\nfunction HomeContent() {\r\n  return (\r\n    <div className=\"HomeContent\">\r\n      <h1>DEVELOPER PORTFOLIO</h1>\r\n      <p>This site is a collection of <i>some</i> of my work (excluding works under NDAs).\r\n      I have been doing software engineering and development work since 2014. Feel free to explore!</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeContent;","import React, { Component } from 'react';\r\n\r\nimport Header from './Header.js';\r\nimport HomeContent from './HomeContent.js';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Header />\r\n        <HomeContent />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react';\r\n\r\nimport './ExperienceCard.css';\r\n\r\nclass ExperienceCard extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ExperienceCard'>\r\n        <h1>Workplace</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ExperienceCard;","import React from 'react';\r\n\r\nimport './Experience.css';\r\nimport ExperienceCard from '../Items/ExperienceCard';\r\n\r\nfunction Experience() {\r\n  return (\r\n    <div className='Experience'>\r\n      <h1>WORK EXPERIENCE</h1>\r\n      <div className='experienceCards'>\r\n        <ExperienceCard />\r\n        <ExperienceCard />\r\n        <ExperienceCard />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Experience;","import React, { Component } from 'react';\r\nimport\r\n{\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport NavigationBar from './NavigationBar.js';\r\nimport Home from '../Components/Home.js';\r\nimport Experience from '../Components/Experience';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <NavigationBar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/experience\" component={Experience} />\r\n            <Route path=\"/portfolio\" component={Home} />\r\n            <Route path=\"/contacts\" component={Home} />\r\n            <Route component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}